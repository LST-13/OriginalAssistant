plugins {
    id 'com.android.application'
    id 'stringfog' apply(true)
}
import com.github.megatronking.stringfog.plugin.kg.RandomKeyGenerator

if (plugins.hasPlugin("stringfog")) {
    stringfog {
        enable true
        debug false
        // 指定加解密的具体实现类，可以用默认实现的xor库或者aes-cbc库，也可以自己定制实现，记得配置dependencies
        implementation 'com.github.megatronking.stringfog.xor.StringFogImpl'
        // 指定需加密的代码包路径，可配置多个，未指定将默认全部加密

        fogPackages = [android.defaultConfig.applicationId]
        // 可选（3.0版本新增）：指定密钥生成器，默认使用长度8的随机密钥（每个字符串均有不同随机密钥）,
        // 也可以指定一个固定的密钥：HardCodeKeyGenerator("This is a key")
        kg new RandomKeyGenerator()
        // 可选（4.0版本新增）：用于控制字符串加密后在字节码中的存在形式, 默认为base64，
        // 也可以使用text或者bytes
        mode base64
    }
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "fun.qianxiao.originalassistant"
        minSdk 23
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.preference:preference:1.1.1'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // 工具库 https://github.com/Blankj/AndroidUtilCode/blob/master/lib/utilcode/README-CN.md
    implementation 'com.blankj:utilcodex:1.31.0'

    // Logger https://github.com/orhanobut/logger
    implementation 'com.orhanobut:logger:2.2.0'

    // 弹窗XPopup https://github.com/li-xiaojun/XPopup/wiki/
    implementation 'com.github.li-xiaojun:XPopup:2.7.2'

    // 网络请求okhttp3 https://github.com/square/okhttp
    implementation "com.squareup.okhttp3:okhttp:4.9.3"

    // EasyHttp
    implementation 'com.hjq:http:9.0'

    // Retrofit https://github.com/square/retrofit
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    // 反序列化json工具
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava3:2.9.0'

    // RxJava https://github.com/ReactiveX/RxJava
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    // RxAndroid https://github.com/ReactiveX/RxAndroid
    implementation "io.reactivex.rxjava3:rxjava:3.1.3"

    // 图片加载Glide https://github.com/bumptech/glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.12.0'

    // BigImageViewPager https://github.com/SherlockGougou/BigImageViewPager
    implementation 'com.github.SherlockGougou:BigImageViewPager:androidx-7.2.3'

    // FlycoTabLayout https://github.com/H07000223/FlycoTabLayout
    implementation 'io.github.h07000223:flycoTabLayout:3.0.0'

    // FloatingActionMenu https://github.com/zendesk/android-floating-action-button
    implementation 'com.getbase:floatingactionbutton:1.10.1'

    // sqlite utils https://github.com/pardom-zz/ActiveAndroid
    //implementation 'com.michaelpardo:activeandroid:3.1.0-SNAPSHOT'

    // 友盟统计SDK https://mobile.umeng.com/platform/apps/list
    implementation  'com.umeng.umsdk:common:9.5.0'// 必选
    implementation  'com.umeng.umsdk:asms:1.4.1'// 必选

    // xor加解密库，stringfog中的implementation需依赖此库 https://github.com/MegatronKing/StringFog-Sample1
    implementation 'com.github.megatronking.stringfog:xor:4.0.1'

}